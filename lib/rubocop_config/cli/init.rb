# frozen_string_literal: true

require_relative "../generators/rubocop_yml_generator"
require_relative "base"

module RubocopConfig
  module CLI
    class Init < Base
      desc "Initialize RuboCop configuration and generate TODO file"

      option :force, type: :boolean, default: false, desc: "Overwrite existing files"

      def call(force: false, **)
        check_existing_files(force)

        # Processing order is important for correct TODO file generation:
        # 1. Create empty .rubocop_todo.yml first to prevent reference errors
        # 2. Generate .rubocop.yml with gem configuration
        # 3. Generate actual .rubocop_todo.yml with gem rules applied
        # This ensures TODO file reflects violations against gem configuration

        create_empty_todo_file

        generator = Generators::RubocopYmlGenerator.new
        generator.generate
        puts "✓ Generated .rubocop.yml"

        generate_todo_file

        show_completion_message
      end

      private def check_existing_files(force)
        existing_files = %w[.rubocop.yml .rubocop_todo.yml].select {|file| File.exist?(file) }

        return if existing_files.none? || force

        puts "Error: Files already exist: #{existing_files.join(", ")}. Use --force to overwrite."
        exit 1
      end

      private def create_empty_todo_file
        File.write(".rubocop_todo.yml", <<~TODO)
          # This file contains configuration to temporarily disable cops
          # Configuration will be generated by running: rubocop --regenerate-todo
        TODO
      end

      private def generate_todo_file
        puts "Generating .rubocop_todo.yml..."

        command = build_todo_command
        if system(command)
          puts "✓ Generated .rubocop_todo.yml"
        else
          puts "Error: Failed to generate .rubocop_todo.yml"
          exit 1
        end
      end

      private def build_todo_command
        "#{rubocop_command} --regenerate-todo --no-exclude-limit --no-offense-counts --no-auto-gen-timestamp"
      end

      private def show_completion_message
        puts <<~MESSAGE

          ✓ RuboCop setup complete!

          Next steps:
            1. Review .rubocop_todo.yml and gradually fix violations
            2. Use 'rubocop-config regenerate-todo' for future updates
            3. Run 'bundle exec rubocop' to check your code
        MESSAGE
      end
    end
  end
end
